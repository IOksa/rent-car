{"version":3,"file":"static/js/23.2a9431d2.chunk.js","mappings":"wTAIMA,EAAYC,EAAAA,GAAAA,IAAH,qHAOFC,EAAe,WAExB,OACI,SAACF,EAAD,WACA,SAAC,KAAD,CACIG,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,kBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,KAIpB,E,UCzBD,EAA8B,oCAA9B,EAA2E,+BCa3E,EAVe,SAAC,GAAD,IAAEC,EAAF,EAAEA,gBAAF,OACX,gBAAKC,UAAWC,EAAhB,UACI,mBAAQC,QAAM,EAACC,KAAK,SAASH,UAAWC,EAAYG,QAASL,EAA7D,SAA8E,eAFvE,E,4BCSA,SAASM,IAEtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IACzBC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IAC9B,GAAsCC,EAAAA,EAAAA,WAAS,GAA/C,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAgCF,EAAAA,EAAAA,UAAS,GAAzC,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,GAAMT,EAAAA,EAAAA,IAAYU,EAAAA,IAElBC,EAAQC,EAAAA,GAAWC,EAAAA,IAEzBC,EAAAA,EAAAA,YAAU,WAMR,GALe,IAAZP,GACDV,GAASkB,EAAAA,EAAAA,MAIRN,EAAM,CACP,IAAMO,EAAa,wDAAwDP,EAAMQ,WACjFC,EAAAA,GAAAA,MAAYF,EACb,CAEF,GAAE,CAACnB,EAAUU,EAAWE,IAEzB,IAAMU,EAAqB,mCAAE,8FACnBtB,GAASuB,EAAAA,EAAAA,GAAab,EAAU,IADb,OAEzBC,GAAa,SAAAa,GAAS,OAAKA,EAAY,CAAjB,IACnBd,EAAU,GAAGI,IACdL,GAAgB,GAChBY,EAAAA,GAAAA,KAAW,+DALY,2CAAF,qDASrBI,EAAsC,IAAfvB,IAAqBG,GAAaG,EAE/D,OACE,iCACE,SAACkB,EAAA,EAAD,WACE,2BAAO,eAET,SAAC,KAAD,CAAgBC,UAAU,OAAOC,MAAM,YACtCvB,GAAa,SAACpB,EAAD,KACZ,SAAC4C,EAAA,EAAD,CAAaC,KAAM5B,IAEpBuB,IAA0B,SAACM,EAAD,CAAgBtC,gBAAiB6B,MAIjE,C","sources":["components/Spinner/CircleSpinner.jsx","webpack://react-homework-template/./src/components/ButtonLoadMore/ButtonLoadMore.module.css?65fe","components/ButtonLoadMore/ButtonLoadMore.jsx","pages/Catalog/Catalog.jsx"],"sourcesContent":["import { Circles } from 'react-loader-spinner';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding-top: 260px;\n`;\n\nexport const CircleSpinner =()=>{\n\n    return (\n        <Container>\n        <Circles\n            height=\"80\"\n            width=\"80\"\n            color=\"#0b5394\"\n            ariaLabel=\"circles-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            visible={true}\n            />\n        </Container>\n        );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"ButtonThumb\":\"ButtonLoadMore_ButtonThumb__SqAtg\",\"Button\":\"ButtonLoadMore_Button__kMYQa\"};","import PropTypes from 'prop-types';\n\nimport css from './ButtonLoadMore.module.css';\n\nconst Button = ({onClickLoadMore})=>(\n    <div className={css.ButtonThumb}>\n        <button hidden type=\"button\" className={css.Button} onClick={onClickLoadMore}>Load more</button>\n    </div>\n    \n    \n);\n\n\n\nexport default Button;\n\nButton.propTypes={\n    onClickLoadMore: PropTypes.func.isRequired,\n}; ","import { useState, useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAdverts, fetchFirstPageAdverts } from 'redux/catalog/operations';\nimport {selectAdvertsState, selectIsLoading, selectError } from 'redux/catalog/selectors';\nimport {CircleSpinner} from 'components/Spinner/CircleSpinner';\nimport AdvertsList from 'components/AdvertsList/AdvertsList';\nimport ButtonLoadMore from 'components/ButtonLoadMore/ButtonLoadMore';\nimport {lengthData,queryLimit} from '../../constants/constants';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nexport default function Catalog() {\n\n  const dispatch = useDispatch();\n  const stateAdverts=useSelector(selectAdvertsState);\n  const isLoading = useSelector(selectIsLoading);\n  const [isLoadButton, setIsLoadButton]=useState(true);\n  const [countPage, setCountPage]=useState(1);\n  const error=useSelector(selectError);\n\n  const maxPage=lengthData/queryLimit;\n\n  useEffect(() => {\n    if(countPage===1){\n      dispatch(fetchFirstPageAdverts());\n    }\n\n    \n    if(error){\n      const errorMessage=\"Something went wrong. Reload the page and try again. \"+error.toString();\n      toast.error(errorMessage);\n    }\n    \n  }, [dispatch, countPage, error]);\n\n  const handleOnClickLoadMore =async ()=>{\n      await dispatch(fetchAdverts(countPage+1));   \n      setCountPage(prevState => (prevState + 1));\n      if(countPage+1>=maxPage){\n        setIsLoadButton(false);\n        toast.info(\"We're sorry, but you've reached the end of search results.\");\n      }\n  }\n\n  const shouldRenderLoadButton=stateAdverts!==0 && !isLoading && isLoadButton;\n\n  return (\n    <>\n      <Helmet>\n        <title>Catalog</title>\n      </Helmet>\n      <ToastContainer autoClose=\"4000\" theme=\"colored\"/>\n      {isLoading ? (<CircleSpinner/>)\n      :(<AdvertsList cars={stateAdverts}/>)\n      }\n      {shouldRenderLoadButton && <ButtonLoadMore onClickLoadMore={handleOnClickLoadMore}/>}\n      \n    </>\n  );\n}"],"names":["Container","styled","CircleSpinner","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","onClickLoadMore","className","css","hidden","type","onClick","Catalog","dispatch","useDispatch","stateAdverts","useSelector","selectAdvertsState","isLoading","selectIsLoading","useState","isLoadButton","setIsLoadButton","countPage","setCountPage","error","selectError","maxPage","lengthData","queryLimit","useEffect","fetchFirstPageAdverts","errorMessage","toString","toast","handleOnClickLoadMore","fetchAdverts","prevState","shouldRenderLoadButton","Helmet","autoClose","theme","AdvertsList","cars","ButtonLoadMore"],"sourceRoot":""}